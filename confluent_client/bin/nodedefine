#!/usr/bin/python3
# vim: tabstop=4 shiftwidth=4 softtabstop=4

# Copyright 2017 Lenovo
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import asyncio
import optparse
import os
import signal
import sys

try:
    signal.signal(signal.SIGPIPE, signal.SIG_DFL)
except AttributeError:
    pass

path = os.path.dirname(os.path.realpath(__file__))
path = os.path.realpath(os.path.join(path, '..', 'lib', 'python'))
if path.startswith('/opt'):
    sys.path.append(path)

import confluent.client as client

async def main():
    argparser = optparse.OptionParser(
        usage='''\n       %prog noderange attribute1=value1 attribute2=value,...
                \n ''')
    (options, args) = argparser.parse_args()
    requestargs = None
    try:
        noderange = args[0]
    except IndexError:
        argparser.print_help()
        sys.exit(1)
    client.check_globbing(noderange)
    session = client.Command()
    exitcode = 0
    attribs = {'name': noderange}
    for arg in args[1:]:
        key, val = arg.split('=', 1)
        attribs[key] = val
    async for r in session.create('/noderange/', attribs):
        if 'error' in r:
            sys.stderr.write(r['error'] + '\n')
            exitcode |= 1
        if 'created' in r:
            print('{0}: created'.format(r['created']))
    sys.exit(exitcode)

if __name__ == '__main__':
    asyncio.get_event_loop().run_until_complete(main())
